# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: ds-build-and-test

on:
  push:
  pull_request:

permissions:
  statuses: write
  checks: write
env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  SRC_DIR: .

  AZURE_APP_PACKAGE_PATH: .\DelegationStation\published
  AZURE_APP_PKG_NAME: webapp

  AZURE_UPDATE_FUNCTION_PACKAGE_PATH: .\UpdateDevices\published
  AZURE_UPDATE_FUNCTION_PKG_NAME: update-function

  AZURE_SYNC_FUNCTION_PACKAGE_PATH: .\CorporateIdentifierSync\published
  AZURE_SYNC_FUNCTION_PKG_NAME: sync-function

  AZURE_WEBJOB_PACKAGE_PATH: .\RemoveCaseSensitiveDuplicates\published
  AZURE_WEBJOB_PKG_NAME: dupe-cleanup-webjob

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet      
      uses: NuGet/setup-nuget@v1.0.5
        
    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1      
        
    - name: Restore dependencies
      run: dotnet restore  

    - name: Build #Test Project
      run: |
        msbuild.exe ${{ env.SRC_DIR }}/DelegationStation.sln /p:platform="Any CPU" /p:configuration="Release"       

    - name: Run Tests
      continue-on-error: true
      run: |
        vstest.console.exe ${{ env.SRC_DIR }}/DelegationStationTests/bin/Release/net8.0/DelegationStationTests.dll /logger:trx
       
    - name: Visualize Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Unit Tests
        path: ${{ env.SRC_DIR }}/TestResults/*
        reporter: dotnet-trx
        fail-on-error: 'false'

    - name: Publish
      run: |
        dotnet publish ${{ env.SRC_DIR }}/DelegationStation --configuration ${{ env.CONFIGURATION}} --no-build --output "${{ env.AZURE_APP_PACKAGE_PATH }}"
        dotnet publish ${{ env.SRC_DIR }}/UpdateDevices --configuration ${{ env.CONFIGURATION}} --no-build --output "${{ env.AZURE_UPDATE_FUNCTION_PACKAGE_PATH }}"
        dotnet publish ${{ env.SRC_DIR }}/CorporateIdentifierSync --configuration ${{ env.CONFIGURATION}} --no-build --output "${{ env.AZURE_SYNC_FUNCTION_PACKAGE_PATH }}"
        dotnet publish ${{ env.SRC_DIR }}/RemoveCaseSensitiveDuplicates --configuration ${{ env.CONFIGURATION}} --no-build --output "${{ env.AZURE_WEBJOB_PACKAGE_PATH }}"
      
    - name: Upload WebApp Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AZURE_APP_PKG_NAME }}
        path: ${{ env.AZURE_APP_PACKAGE_PATH }}

    - name: Upload Update Function Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AZURE_UPDATE_FUNCTION_PKG_NAME }}
        path: ${{ env.AZURE_UPDATE_FUNCTION_PACKAGE_PATH }}

    - name: Upload Sync Function Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AZURE_SYNC_FUNCTION_PKG_NAME }}
        path: ${{ env.AZURE_SYNC_FUNCTION_PACKAGE_PATH }}

    - name: Upload WebJob Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AZURE_WEBJOB_PKG_NAME }}
        path: ${{ env.AZURE_WEBJOB_PACKAGE_PATH }}

