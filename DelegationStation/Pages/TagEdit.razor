@page "/TagEdit/{Id}"
@using DelegationStationShared.Models;
@using DelegationStation.Interfaces;
@using Microsoft.Graph.Models;
@using DelegationStation.Shared;
@using DelegationStationShared.Enums;

@inject ILogger<TagEdit> logger
@inject IDeviceTagDBService deviceTagDBService
@inject IGraphService graphService
@inject IConfiguration config
@inject NavigationManager nav
@inject IRoleDBService roleDBService
@inject IAuthorizationService authorizationService


@attribute [Authorize]

<h3>Tag Edit</h3>

<AuthorizeView Context="authContext" Policy="TagView" Resource="_tag">
    <Authorized>
        @if (Id == null)
        {
            <h3>Error in navigation path</h3>
        }
        else if (tag != null)
        {
            <EditForm Context="OutsideForm" Model="@tag" OnSubmit="Save">
                <h3>@tag.Name</h3>
                <h4>@tag.Description</h4>
                <br />
                <hr />
                <AuthorizeView Context="TagUpdateContext" Policy="TagUpdate" Resource="_tag">
                    <Authorized>
                        <label>Name:</label>
                        <InputText @bind-Value=tag.Name class="form-control"></InputText>
                        <label>Description:</label>
                        <InputTextArea @bind-Value=tag.Description class="form-control"></InputTextArea>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" @bind=tag.CorpIDSyncEnabled id="corpIDSwitch">
                            <label class="form-check-label" for="corpIDSwitch">Enable Corporate Identifier Sync</label>
                        </div>
                        <label class="my-1">Allowed User Principal Name RegEx:</label>
                        <InputText @bind-Value=tag.AllowedUserPrincipalName @oninput=@ClearTestEnrollmentResult class="form-control"></InputText>
                        <div class="border rounded my-3 p-3">
                            <h4>Validate RegEx</h4>
                            <label>Enter Test User Principal Name:</label>
                            <InputText @bind-Value=testEnrollmentUser @oninput=@ClearTestEnrollmentResult class="form-control"></InputText>
                            <button type="button" @onclick=@ValidateTestEnrollmentUser class="btn btn-primary my-2">Test</button>
                            @if (displayTestResult)
                            {
                                @if (testEnrollmentUserResult == null)
                                {
                                    <p class="text-success">Invalid Regular Expression</p>
                                }
                                else if (testEnrollmentUserResult == true)
                                {
                                    <p class="text-success">User is allowed to enroll</p>
                                }
                                else
                                {
                                    <p class="text-danger">User is not allowed to enroll</p>
                                }
                            }
                        </div>
                        <br />
                        <hr />

                        <div class="container">
                            <h2>Assigned Groups</h2>
                            <table class="table table-responsive">
                                <thead>
                                    <tr>
                                        <th>Role</th>
                                        <th>Security Group Name</th>
                                        <th>Security Group Id</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (RoleDelegation r in tag.RoleDelegations)
                                    {
                                        <tr>
                                            <td>@r.Role.Name</td>
                                            <td>@r.SecurityGroupName</td>
                                            <td>@r.SecurityGroupId</td>
                                            <td><button type="button" class="btn btn-danger @(authorizationService.AuthorizeAsync(authContext.User, _tag, Authorization.DeviceTagOperations.Update).Result.Succeeded ? "" : "disabled")" @onclick=@(() => tag.RoleDelegations.Remove(r))><span class="oi oi-trash"></span> Delete</button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <DisplayMessage Message="@addRoleMessage" />
                        <EditForm Model="@roleDelegation" OnValidSubmit="AddRoleDelegation" class="form-control mb-3">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            Role:
                            <select value="@roleDelegation.Role.Id" @onchange=@((e) => UpdateRole(e)) class="form-select">
                                <option></option>
                                @foreach (Role r in roles)
                                {
                                    <option value="@r.Id">@r.Name</option>
                                }
                            </select>

                            @if (!string.IsNullOrEmpty(roleDelegation.SecurityGroupName))
                            {
                                <p class="mt-2 mb-2">@roleDelegation.SecurityGroupName</p>
                                <p class="mt-2 mb-2">@roleDelegation.SecurityGroupId</p>
                            }
                            else if (string.IsNullOrEmpty(roleDelegation.Role.Name))
                            {
                                <p class="mt-2 mb-2">Select a role</p>
                            }
                            else
                            {
                                <p class="mt-2 mb-2">Select a security group</p>
                            }

                            <DisplayMessage Message=@roleSecurityGroupSearchMessage />
                            <InputText class="form-control" @bind-Value=roleSecurityGroupSearchString placeholder="Search for a group"></InputText>
                            <button type="button" class="btn btn-secondary mt-2 @(roleSecurityGroupSearchInProgress ? "disabled" : "")" @onclick=@(() => RoleSearchSecurityGroups()) @onkeyup=@RoleSearchSecurityGroupsKeyUp>Search</button>
                            @if (roleSecurityGroupSearchResults.Count > 0)
                            {
                                <table class="table table-responsive">
                                    <thead>
                                        <tr>
                                            <th>Display Name</th>
                                            <th>Description</th>
                                            <th>Object Id</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (Group g in roleSecurityGroupSearchResults)
                                        {
                                            <tr class="">

                                                <td class="clickable" @onclick=@(() => RoleSelectSecurityGroup(g))>@g.DisplayName</td>
                                                <td class="clickable" @onclick=@(() => RoleSelectSecurityGroup(g))>@g.Description</td>
                                                <td class="clickable" @onclick=@(() => RoleSelectSecurityGroup(g))>@g.Id</td>
                                                <td><button type="button" class="btn btn-primary" @onclick=@(() => RoleSelectSecurityGroup(g))>Select</button></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else if (roleSecurityGroupSearchInProgress)
                            {
                                <p class="mt-2 mb-2">Searching...</p>
                            }
                            else if (roleSecurityGroupSearchResults.Count == 0 && roleSecurityGroupSearchExecuted)
                            {
                                <p class="mt-2 mb-2">No results found</p>
                            }
                            <br />
                            <input type="submit" class="btn btn-primary mt-2 mb-2 @(string.IsNullOrEmpty(roleDelegation.SecurityGroupName) || string.IsNullOrEmpty(roleDelegation.Role.Name) ? "disabled" : "")" value="Add Role" />
                        </EditForm>

                    </Authorized>
                    <NotAuthorized>
                        <label>Name:</label>
                        <InputText @bind-Value=tag.Name class="form-control" disabled></InputText>
                        <label>Description:</label>
                        <InputTextArea @bind-Value=tag.Description class="form-control" disabled></InputTextArea>
                        <br />
                        <hr />
                    </NotAuthorized>
                </AuthorizeView>



                <AuthorizeView Context="TagLimitedUpdateContext" Policy="TagUpdateActions" Resource="_tag">
                    <Authorized>
                        <div class="container">
                            <h2>Actions on Enrollment</h2>
                            <table class="table table-responsive">
                                <thead>
                                    <tr>
                                        <th>Action Type</th>
                                        <th>Name</th>
                                        <th>Value</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (DeviceUpdateAction a in tag.UpdateActions)
                                    {
                                        <tr class="">
                                            <td>@a.ActionType</td>
                                            <td>@a.Name</td>
                                            <td>@a.Value</td>
                                            <td>
                                                @if(ActionAllowed(a))
                                                {
                                                    <button type="button" class="btn btn-danger" @onclick=@(ActionAllowed(a) ? (() => tag.UpdateActions.Remove(a)) : (() => {}))><span class="oi oi-trash"></span> Delete</button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <DisplayMessage Message="@deviceUpdateActionsValidationMessage" />
                        <EditForm EditContext="deviceUpdateActionEditContext" OnValidSubmit="AddDeviceUpdateAction" class="form-control mb-3">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            Update Action:
                            <select value="@deviceUpdateAction.ActionType" @onchange="DeviceUpdateActionChanged" class="form-select">

                                @foreach (DeviceUpdateActionType t in Enum.GetValues(typeof(DeviceUpdateActionType)))
                                {
                                    if (t == DeviceUpdateActionType.Attribute)
                                    {
                                        <AuthorizeView Context="TagAttributeUpdateOption" Policy="TagUpdateActionAttributes" Resource="_tag">
                                            <Authorized>
                                                <option value="@t">@t</option>
                                            </Authorized>
                                        </AuthorizeView>
                                    }

                                    if (t == DeviceUpdateActionType.Group)
                                    {
                                        <AuthorizeView Context="TagGroupUpdateOption" Policy="TagUpdateActionSecurityGroups" Resource="_tag">
                                            <Authorized>
                                                <option value="@t">@t</option>
                                            </Authorized>
                                        </AuthorizeView>
                                    }

                                    if (t == DeviceUpdateActionType.AdministrativeUnit)
                                    {
                                        <AuthorizeView Context="TagAdministrativeUnitUpdateOption" Policy="TagUpdateActionAdministrativeUnits" Resource="_tag">
                                            <Authorized>
                                                <option value="@t">@t</option>
                                            </Authorized>
                                        </AuthorizeView>
                                    }

                                }
                            </select>
                            <ValidationMessage For=@(() => deviceUpdateAction.ActionType) />
                            @if (deviceUpdateAction.ActionType == DeviceUpdateActionType.Attribute)
                            {
                                <label class="form-label">Attribute name:</label>
                                <InputSelect @bind-Value=deviceUpdateAction.Name class="form-select">
                                    @{
                                        foreach (AllowedAttributes t in Enum.GetValues(typeof(AllowedAttributes)))
                                        {
                                            if (tag.UpdateActions.Where(u => u.Name == t.ToString()).Count() > 0)
                                            {
                                                // Attribute already exists in tag
                                                continue;
                                            }
                                            else if (t == AllowedAttributes.All)
                                            {
                                                // Don't show the All attribute
                                                continue;
                                            }
                                            else if (AttributeAllowed(t))
                                            {
                                                <option value="@t">@t</option>
                                            }
                                        }
                                    }
                                </InputSelect>
                                <label class="form-label">Attribute value:</label>
                                <input type="text" @bind-value=deviceUpdateAction.Value class="form-control" @bind-value:event="oninput" />
                            }
                            else if (deviceUpdateAction.ActionType == DeviceUpdateActionType.AdministrativeUnit)
                            {
                                @if (!string.IsNullOrEmpty(deviceUpdateAction.Name))
                                {
                                    <p class="mt-2 mb-2">@deviceUpdateAction.Name</p>
                                    <p class="mt-2 mb-2">@deviceUpdateAction.Value</p>
                                }
                                else
                                {
                                    <p class="mt-2 mb-2">Select an Administrative Unit</p>
                                }

                                <DisplayMessage Message=@administrativeUnitSearchMessage />
                                <InputText class="form-control" @bind-Value=administrativeUnitSearchString placeholder="Search for an Administrative Unit"></InputText>
                                <button type="button" class="btn btn-secondary mt-2 @(administrativeUnitSearchInProgress ? "disabled" : "")" @onclick=@(() => SearchAdministrativeUnits()) @onkeyup=@SearchAdministrativeUnitsKeyUp>Search</button>
                                @if (administrativeUnitSearchResults.Count > 0)
                                {
                                    <table class="table table-responsive">
                                        <thead>
                                            <tr>
                                                <th>Display Name</th>
                                                <th>Description</th>
                                                <th>Object Id</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (AdministrativeUnit a in administrativeUnitSearchResults)
                                            {
                                                <tr class="">

                                                    <td class="clickable" @onclick=@(() => SelectAdministrativeUnit(a))>@a.DisplayName</td>
                                                    <td class="clickable" @onclick=@(() => SelectAdministrativeUnit(a))>@a.Description</td>
                                                    <td class="clickable" @onclick=@(() => SelectAdministrativeUnit(a))>@a.Id</td>
                                                    <td><button type="button" class="btn btn-primary" @onclick=@(() => SelectAdministrativeUnit(a))>Select</button></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else if (administrativeUnitSearchInProgress)
                                {
                                    <p class="mt-2 mb-2">Searching...</p>
                                }
                                else if (administrativeUnitSearchResults.Count == 0 && administrativeUnitSearchExecuted)
                                {
                                    <p class="mt-2 mb-2">No results found</p>
                                }
                            }
                            else if (deviceUpdateAction.ActionType == DeviceUpdateActionType.Group)
                            {

                                @if (!string.IsNullOrEmpty(deviceUpdateAction.Name))
                                {
                                    <p class="mt-2 mb-2">@deviceUpdateAction.Name</p>
                                    <p class="mt-2 mb-2">@deviceUpdateAction.Value</p>
                                }
                                else
                                {
                                    <p class="mt-2 mb-2">Select a security group</p>
                                }

                                <DisplayMessage Message=@securityGroupSearchMessage />
                                <InputText class="form-control" @bind-Value=securityGroupSearchString placeholder="Search for a group"></InputText>
                                <button type="button" class="btn btn-secondary mt-2 @(securityGroupSearchInProgress ? "disabled" : "")" @onclick=@(() => SearchSecurityGroups()) @onkeyup=@SearchSecurityGroupsKeyUp>Search</button>
                                @if (securityGroupSearchResults.Count > 0)
                                {
                                    <table class="table table-responsive">
                                        <thead>
                                            <tr>
                                                <th>Display Name</th>
                                                <th>Description</th>
                                                <th>Object Id</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (Group g in securityGroupSearchResults)
                                            {
                                                <tr class="">

                                                    <td class="clickable" @onclick=@(() => SelectSecurityGroup(g))>@g.DisplayName</td>
                                                    <td class="clickable" @onclick=@(() => SelectSecurityGroup(g))>@g.Description</td>
                                                    <td class="clickable" @onclick=@(() => SelectSecurityGroup(g))>@g.Id</td>
                                                    <td><button type="button" class="btn btn-primary" @onclick=@(() => SelectSecurityGroup(g))>Select</button></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else if (securityGroupSearchInProgress)
                                {
                                    <p class="mt-2 mb-2">Searching...</p>
                                }
                                else if (securityGroupSearchResults.Count == 0 && securityGroupSearchExecuted)
                                {
                                    <p class="mt-2 mb-2">No results found</p>
                                }

                            }
                            <br />

                            <input type="submit" class="btn btn-primary mt-2 mb-3 @(@validateActionInputs() ? "" : "disabled")" value="Add Action" />

                        </EditForm>


                @if (!string.IsNullOrEmpty(tagErrorMessage))
                {
                    <p class="text-danger">@tagErrorMessage</p>
                }
                @if (!string.IsNullOrEmpty(tagSuccessMessage))
                {
                    <p class="text-success">@tagSuccessMessage</p>
                }

                <p>@(deviceCount > -1 ? $"Device count: {deviceCount}" : "Unable to retrieve device count")</p>

                <DisplayMessage Message=@securityGroupSearchMessage />

                        <button id="SaveButton" class="btn btn-success" type="submit">Save</button>
                        <button id="DeleteButton" type="button" class="btn btn-danger @(authorizationService.AuthorizeAsync(authContext.User, _tag, Authorization.DeviceTagOperations.Update).Result.Succeeded ? "" : "disabled")" @onclick=@(() => ConfirmDeleteTag())>Delete</button>
                    </Authorized>
                    <NotAuthorized>
                        <div class="container">
                            <h2>Actions on Enrollment</h2>
                            <table class="table table-responsive">
                                <thead>
                                    <tr>
                                        <th>Action Type</th>
                                        <th>Name</th>
                                        <th>Value</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (DeviceUpdateAction a in tag.UpdateActions)
                                    {
                                        <tr class="">
                                            <td>@a.ActionType</td>
                                            <td>@a.Name</td>
                                            <td>@a.Value</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>


            </EditForm>
        }
        @if (!string.IsNullOrEmpty(userMessage))
        {
            @if (userMessage.ToLower().Contains("error"))
            {
                <div class="alert alert-danger" role="alert">
                    @userMessage
                </div>
            }
            else
            {
                <div class="alert alert-success" role="alert">
                    @userMessage
                </div>
            }
        }
        <ConfirmMessage ConfirmAction="@(async () => await Delete())" @ref="ConfirmDelete" />
        <ConfirmMessage ConfirmAction="@(async () => await Save())" @ref="ConfirmSave" />
    </Authorized>

    <Authorizing>
        <h3>Authorizing...</h3>
    </Authorizing>

    <NotAuthorized>
        <h3>Not Authorized</h3>
    </NotAuthorized>
</AuthorizeView>




